# This pipeline is here: https://dev.azure.com/dnceng-public/public/_build?definitionId=37

# Branches that trigger a build on commit
trigger:
  branches:
    include:
    - main
    - dev*
    - feature/*

# Branches that trigger builds on PR
pr:
  branches:
    include:
    - main
    - dev*
    - feature/*

jobs:
- job: Visual_Studio
  pool:
    # The max number of concurrent jobs that can be run in the pool is 820.
    # https://dnceng-public.visualstudio.com/public/_settings/agentqueues?queueId=13&view=jobs
    name: NetCore-Public
    # Demands Docs: https://docs.microsoft.com/azure/devops/pipelines/process/demands?view=azure-devops&tabs=yaml#manually-entered-demands
    # ImageOverride is used to select the image. See:
    # - https://dev.azure.com/dnceng/internal/_wiki/wikis/DNCEng%20Services%20Wiki/510/1ES-Hosted-Pools-Migration
    # - https://dev.azure.com/dnceng/internal/_wiki/wikis/DNCEng%20Services%20Wiki/675/1ESManagedPoolsDesign?anchor=1es-managed-images
    # Image List: https://helix.dot.net/#1esPools
    demands: ImageOverride -equals Windows.VS2022Preview.Amd64.Open
  strategy:
    maxParallel: 2
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  timeoutInMinutes: 60
  steps:
    - script: $(Build.SourcesDirectory)\build.cmd -configuration $(_configuration) -prepareMachine -test -ci -sign -pack -binaryLog
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(_configuration)'
        ArtifactName: '$(_configuration) unit test logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\bin'
        ArtifactName: '$(_configuration) bin folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)'
        ArtifactName: '$(_configuration) Test Result Logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishTestResults@2
      inputs:
        testRunner: 'xUnit'
        testResultsFiles: '**/*.xml' 
        searchFolder: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)'
        configuration: '$(_configuration)'
        publishRunAttachments: true
        failTaskOnFailedTests: true
      continueOnError: true
      condition: always()
