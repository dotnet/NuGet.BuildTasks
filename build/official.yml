# NuGet.BuildTasks
# Official pipeline
# URL: https://devdiv.visualstudio.com/DevDiv/_build?definitionId=11797&_a=summary
variables:
  BuildConfiguration: Release
  BuildPlatform: any cpu
  TeamName: NuGet-BuildTasks
  TeamEmail: dotnetdevexproj@microsoft.com
  SignType: real
  VisualStudioDropName: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)
  _DevDivDropAccessToken: $(System.AccessToken)

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES
      tsa:
        enabled: true
        configFile: $(Build.SourcesDirectory)/build/TSAConfig.gdntsa
        onboard: true
      binskim:
        enabled: true
        analyzeTargetGlob: $(Build.SourcesDirectory)/artifacts/$(BuildConfiguration)/bin/Dlls/**.dll
      credscan:
        enabled: true
      policheck:
        enabled: true
    pool:
      name: AzurePipelines-EO
      image: AzurePipelinesWindows2022compliantGPT
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: stage
      jobs:
      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
        - template: /eng/common/templates-official/job/onelocbuild.yml@self
          parameters:
            MirrorRepo: NuGet.BuildTasks
            LclSource: lclFilesfromPackage
            LclPackageId: 'LCL-JUNO-PROD-NBUILDTASKS'
      - job: Build
        pool:
          name: VSEngSS-MicroBuild2022-1ES
          demands: Cmd
          timeoutInMinutes: 90
        templateContext:
          mb:
            signing:
              enabled: true
              signType: $(SignType)
            swix:
              enabled: true
          outputParentDirectory: $(Build.SourcesDirectory)/artifacts
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Logs'
            condition: not(succeeded())
            targetPath: $(Build.SourcesDirectory)/artifacts/log/$(BuildConfiguration)
            artifactName: 'Logs'
          - output: pipelineArtifact
            displayName: 'Publish Artifact VSSetup'
            condition: succeeded()
            targetPath: artifacts/VSSetup/$(BuildConfiguration)
            artifactName: 'VSSetup'
          - output: pipelineArtifact
            displayName: 'Publish Artifact Packages'
            condition: succeeded()
            targetPath: artifacts/packages/$(BuildConfiguration)
            artifactName: 'Packages'
          - output: microBuildVstsDrop
            dropName: $(VisualStudioDropName)
            dropFolder: artifacts/VSSetup/$(BuildConfiguration)/Insertion
            dropRetentionDays : 60
            accessToken: $(_DevDivDropAccessToken)
            displayName: Upload VSTS Drop
            condition: succeeded()

        steps:
        - checkout: self
          clean: true
        - task: PowerShell@2
          displayName: Build (for SBOM)
          inputs:
            filePath: eng\common\build.ps1
            arguments: '-configuration $(BuildConfiguration) -restore -build'
            failOnStderr: true
        - template: /eng/common/templates-official/steps/generate-sbom.yml@self
        - script: eng\common\CIBuild.cmd -clean
          displayName: Clean
        - script: eng\common\CIBuild.cmd -configuration $(BuildConfiguration) /p:OfficialBuildId=$(Build.BuildNumber) /p:VisualStudioDropName=$(VisualStudioDropName) /p:DotNetSignType=$(SignType) /p:PublishToSymbolServer=true /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat) /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat) /p:SbomManifestJsonDirectory=$(Build.SourcesDirectory)\artifacts\VSSetup\$(BuildConfiguration)\Insertion /p:SbomMetadataDirectory=$(Build.ArtifactStagingDirectory)\sbom /v:normal
          displayName: Build
        - task: PublishTestResults@2
          displayName: Publish Test Results
          inputs:
            testResultsFormat: XUnit
            testResultsFiles: 'artifacts/TestResults/$(BuildConfiguration)/*.xml'
            mergeTestResults: true
            testRunTitle: 'Unit Tests'
            condition: always()
