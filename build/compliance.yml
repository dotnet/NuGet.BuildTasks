# Name: DotNet-NuGet.BuildTasks-Compliance
# URL: https://devdiv.visualstudio.com/DevDiv/_build?definitionId=15125
#
# Responsible for running compliance checks.

#
# NOTE: triggers for this build are defined in the Web UI instead of here in the YAML file so they
#       apply to all branches.

resources:
- repo: self
  clean: true
pool:
  name: VSEngSS-MicroBuild2019-1ES
  demands: Cmd
  timeoutInMinutes: 90
variables:
  BuildConfiguration: Release
  TeamName: DotNet-Project-System
  BuildPlatform: any cpu
  SignType: test
  VisualStudioDropName: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

steps:
- checkout: self
  clean: true
- task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
  displayName: Install Signing Plugin
  inputs:
    signType: $(SignType)
    esrpSigning: true
  condition: and(succeeded(), ne(variables['SignType'], ''))

- task: ms-vseng.MicroBuildTasks.32f78468-e895-4f47-962c-58a699361df8.MicroBuildSwixPlugin@1
  displayName: Install Swix Plugin

- script: build.cmd 
          -configuration $(BuildConfiguration)
          -test
          -sign
          -pack
          -ci
          /p:OfficialBuildId=$(Build.BuildNumber)
          /p:VisualStudioDropName=$(VisualStudioDropName)
          /p:DotNetSignType=$(SignType)
  displayName: Build

- task: CopyFiles@2
  # Copy the product binary in order to limit the work done by APIScan.
  displayName: Copy DLL for APIScan
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\artifacts\bin\Microsoft.NuGet.Build.Tasks\$(BuildConfiguration)\net46'
    Contents: Microsoft.NuGet.Build.Tasks.dll
    TargetFolder: '$(Agent.TempDirectory)\APIScanFiles'
  continueOnError: true

- task: CopyFiles@2
  # Copy the product PDB in order to limit the work done by APIScan.
  displayName: Copy PDB for APIScan
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\artifacts\SymStore\$(BuildConfiguration)\Microsoft.NuGet.Build.Tasks\net46'
    Contents: Microsoft.NuGet.Build.Tasks.pdb
    TargetFolder: '$(Agent.TempDirectory)\APIScanFiles'
  continueOnError: true

- task: APIScan@2
  # Scan for the use of undocumented APIs.
  displayName: Run APIScan
  inputs:
    softwareFolder: '$(Agent.TempDirectory)\APIScanFiles' # Only examine the product binaries we previously copied.
    softwareName: 'Dotnet-NuGet.BuildTasks'
    softwareVersionNum: '17.0'
    softwareBuildNum: '$(Build.BuildId)'
    symbolsFolder: 'SRV*http://symweb'
  env:
    AzureServicesAuthConnectionString: runAs=App;AppId=$(ApiScanClientId);TenantId=$(ApiScanTenant);AppKey=$(ApiScanSecret)
  continueOnError: true

- task: PublishSecurityAnalysisLogs@3
  # Publish all the analysis logs as a build artifact.
  displayName: Publishing analysis artifacts
  inputs:
    ArtifactName: 'CodeAnalysisLogs'
    ArtifactType: 'Container'          # Associate the artifacts with the build.
    AllTools: true                     # Look for logs from all tools.
    ToolLogsNotFoundAction: 'Standard' # If a log is not found just output a message to that effect.

- task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
  displayName: Cleanup
  condition: always()